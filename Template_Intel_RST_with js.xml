<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2019-12-17T10:56:56Z</date>
    <groups>
        <group>
            <name>Intel RST</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template_Intel_RST_with js</template>
            <name>Template_Intel_RST_with js</name>
            <groups>
                <group>
                    <name>Intel RST</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Intel RST internal items</name>
                </application>
                <application>
                    <name>Intel RST Logical Disks</name>
                </application>
                <application>
                    <name>Intel RST Physical Disks</name>
                </application>
                <application>
                    <name>Intel RST Physical Disks SMART</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Intel RST All Info</name>
                    <key>irst.allinfo[{$IRST_CLI}]</key>
                    <delay>{$STOR_CTRL_REQUEST_PERIOD}</delay>
                    <history>3600</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Get all info from rst controller(cli path + I key)</description>
                    <applications>
                        <application>
                            <name>Intel RST internal items</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>Intel RST All Lds info</name>
                    <type>DEPENDENT</type>
                    <key>irst.ld</key>
                    <delay>0</delay>
                    <history>{$INTERNAL_ITEMS_HISTORY_PERIOD}</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Intel RST internal items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>value=(value.match(/.*/gm)).toString()
var matches = value.match(/Name:\s*\S*Raid Level:\s*\d{1,}\S*Size:(\s*\S*){2}StripeSize:(\s*\S*){1,2}Num Disks:\s*\d{1,2}\S*State:\s*\w*/gmi);
var prejson = '';
function obj(){
    obj=new Object();
    this.add=function(key,value){
        obj[&quot;&quot;+key+&quot;&quot;]=value;
    }
    this.obj=obj
}
var myobj={};
myobj = new obj();
for(var i = 0; i &lt; matches.length; i++)
{
    var str = matches[i].split(',,,');
    for(var x = 0; x &lt; str.length; x++){
       var temp  = str[x].split(':');
myobj.add(temp[0],temp[1]);
    } 
prejson= prejson + &quot;,&quot; + ((JSON.stringify(myobj,null,space=0)).replace(/&quot;obj&quot;:{&quot;Name&quot;:&quot;\s*/gm,'&quot;')).replace(/,&quot;Raid/,':{&quot;Raid');
}
json=(&quot;[&quot; + prejson + &quot;]&quot;).replace(/\[,/,&quot;[&quot;).replace(/\s{2,}/gm,&quot;&quot;).replace(/}},{/gm,&quot;},&quot;)
return json</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>irst.allinfo[{$IRST_CLI}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Intel RST All Pds info</name>
                    <type>DEPENDENT</type>
                    <key>irst.pd</key>
                    <delay>0</delay>
                    <history>{$INTERNAL_ITEMS_HISTORY_PERIOD}</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Intel RST internal items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>value=(value.match(/.*/gm)).toString()
var re=/ID:\s*\S*Type:\s*\S*Disk Type:(\s*\S*){1,3}State:\s*\S*Size:\s*\S*\s\S*,,,(Free Size:\s*\S*\s\S*,,,)?System Disk:\s*\S*,,,(PCH Connected:\s\S*,,,)?Usage:\s*(\S*\s*){1,2},,,Serial Number:(\s*\S*\s*|\s*\S*:\d{1,2}\s*)(?=(,,,)?)/gmi;
//value=value.replace(/^\s*[\r\n]/gm,&quot;&quot;)
var matches = value.match(re);
var prejson = '';
function obj(){
    obj=new Object();
    this.add=function(key,value){
        obj[&quot;&quot;+key+&quot;&quot;]=value;
    }
    this.obj=obj
}
var myobj={};
myobj = new obj();
for(var i = 0; i &lt; matches.length; i++)
{
    var str = matches[i].split(',,,');
    for(var x = 0; x &lt; str.length; x++){
       var temp = str[x].replace(/(:\d{1,2})$/,'_nocorrectsn');
       var temp  = temp.split(':');
myobj.add(temp[0],temp[1]);
    } 
prejson= prejson + &quot;,&quot; + ((JSON.stringify(myobj,null,space=0)).replace(/&quot;obj&quot;:{&quot;ID&quot;:&quot;\s*/gm,'&quot;')).replace(/,&quot;Type/,':{&quot;Type');
}
json=(&quot;[&quot; + prejson + &quot;]&quot;).replace(/\[,/,&quot;[&quot;).replace(/\s{2,}/gm,&quot;&quot;).replace(/}},{/gm,&quot;},&quot;)
return json.toString()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>irst.allinfo[{$IRST_CLI}]</key>
                    </master_item>
                </item>
                <item>
                    <name>Intel RST All Pds LLD info</name>
                    <type>DEPENDENT</type>
                    <key>irst.SMART.lld</key>
                    <delay>0</delay>
                    <history>3600</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Intel RST internal items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>value=(value.match(/.*/gm)).toString()
var re=/ID:\s*\S*Type:\s*\S*Disk Type:(\s*\S*){1,3}State:\s*\S*Size:\s*\S*\s\S*,,,(Free Size:\s*\S*\s\S*,,,)?System Disk:\s*\S*,,,(PCH Connected:\s\S*,,,)?Usage:\s*(\S*\s*){1,2},,,Serial Number:(\s*\S*\s*|\s\S*:\d{1,2}\s*)(?=(,,,)?)/gmi;
//value=value.replace(/^\s*[\r\n]/gm,&quot;&quot;)
var matches = value.match(re);
var prejson = '';
function obj(){
    obj=new Object();
    this.add=function(key,value){
        obj[&quot;&quot;+key+&quot;&quot;]=value;
    }
    this.obj=obj
}
var myobj={};
myobj = new obj();
for(var i = 0; i &lt; matches.length; i++)
{
    var str = matches[i].split(',,,');
    for(var x = 0; x &lt; str.length; x++){
       var temp  = str[x].split(':');
    if (temp[0].match(/ID.*|Serial Number.*/gm)){
myobj.add(temp[0],temp[1]);
    } 
}
prejson= prejson + &quot;,&quot; + ((JSON.stringify(myobj,null,space=0)).replace(/&quot;obj&quot;:/gm,'&quot;')).replace(/}$/,&quot;&quot;).replace(/{&quot;{/gm,'{');

}
json=(&quot;[&quot; + prejson + &quot;]&quot;).replace(/\[,/,&quot;[&quot;).replace(/\s{2,}/gm,&quot;&quot;).replace(/}},{/gm,&quot;},&quot;).replace(/ID&quot;:/gm,'SLOT&quot;:')
return json.toString()</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>irst.allinfo[{$IRST_CLI}]</key>
                    </master_item>
                </item>
                <item>
                    <name>RST cli path</name>
                    <key>wmi.get[root\cimv2,select DriverVersion from Win32_PnPSignedDriver WHERE DriverProviderName like '%Intel%' and DeviceClass like 'SCSIADAPTER' and not DeviceName like '%Ethernet Virtual Storage%']</key>
                    <delay>{$INTERNAL_ITEMS_REQUEST_PERIOD}</delay>
                    <history>{$INTERNAL_ITEMS_HISTORY_PERIOD}</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Intel RST internal items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var DriverVer = value.match(/\d{1,2}.\d.\d/);
DriverVer=(DriverVer[0].replace(/\./gm,&quot;&quot;)).match(/\d{3}/);
// var IrstPath = 'C:\\\\zabbix_agent\\\\diskutils\\\\rst\\\\';
var IrstVer = (DriverVer &lt; 170) ? '13_16_rstcli64.exe':
(DriverVer &lt; 500) ? '4.6.0_rstcli64.exe':
(DriverVer &lt; 503) ? '5.0.0_rstcli64.exe':
(DriverVer &lt; 530) ? '5.0.3_rstcli64.exe':
(DriverVer &lt; 560) ? '5.6.0_rstcli64.exe':
(DriverVer &lt; 620) ? 'IntelVROCCli.exe':
'rstcli64.exe';
//var IrstCli = IrstPath + IrstVer;
var IrstCli=IrstVer;
return IrstCli </params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 or {count(#2)}&lt;2</expression>
                            <name>{ITEM.VALUE}</name>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>NOTIFY</tag>
                                    <value>NO</value>
                                </tag>
                                <tag>
                                    <tag>SOURCE</tag>
                                    <value>Intel RST path</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Logical disks discovery</name>
                    <type>DEPENDENT</type>
                    <key>ldlld</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>Logical disk &quot;{#LDNAME}&quot; level</name>
                            <type>DEPENDENT</type>
                            <key>irst.raid.level.[{#LDNAME}]</key>
                            <delay>0</delay>
                            <history>{$LD_HISTORY_PERIOD}</history>
                            <trends>{$LD_TRENDS_PERIOD}</trends>
                            <applications>
                                <application>
                                    <name>Intel RST Logical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#LDNAME}']['Raid Level']</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$LD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.ld</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Logical disk &quot;{#LDNAME}&quot; disks count</name>
                            <type>DEPENDENT</type>
                            <key>irst.raid.pdcount.[{#LDNAME}]</key>
                            <delay>0</delay>
                            <history>{$LD_HISTORY_PERIOD}</history>
                            <trends>{$LD_TRENDS_PERIOD}</trends>
                            <applications>
                                <application>
                                    <name>Intel RST Logical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#LDNAME}']['Num Disks']</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$LD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.ld</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Logical disk &quot;{#LDNAME}&quot; state</name>
                            <type>DEPENDENT</type>
                            <key>irst.raid.state.[{#LDNAME}]</key>
                            <delay>0</delay>
                            <history>{$LD_HISTORY_PERIOD}</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Intel RST Logical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#LDNAME}']['State']</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$LD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.ld</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{regexp({$LD_INFORMATION_SEVERITY_STATES})}=1</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{regexp({$LD_RECOVERY_STATES})}=1</recovery_expression>
                                    <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; is &quot;{ITEM.VALUE}&quot;</name>
                                    <priority>INFO</priority>
                                    <dependencies>
                                        <dependency>
                                            <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; is &quot;{ITEM.VALUE}&quot;</name>
                                            <expression>{Template_Intel_RST_with js:irst.raid.state.[{#LDNAME}].regexp({$LD_WARNING_SEVERITY_STATES},#1)}=1 and {Template_Intel_RST_with js:irst.raid.state.[{#LDNAME}].regexp({$LD_HIGH_SEVERITY_STATES},#3)}=0</expression>
                                            <recovery_expression>{Template_Intel_RST_with js:irst.raid.state.[{#LDNAME}].regexp({$LD_RECOVERY_STATES})}=1</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>SOURCE</tag>
                                            <value>Intel RST LD state</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{regexp({$LD_WARNING_SEVERITY_STATES},#1)}=1 and {regexp({$LD_HIGH_SEVERITY_STATES},#3)}=0</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{regexp({$LD_RECOVERY_STATES})}=1</recovery_expression>
                                    <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; is &quot;{ITEM.VALUE}&quot;</name>
                                    <priority>WARNING</priority>
                                    <tags>
                                        <tag>
                                            <tag>SOURCE</tag>
                                            <value>Intel RST LD state</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{regexp({$LD_WARNING_SEVERITY_STATES},#1)}=1 and {regexp(Degraded,#2)}=1</expression>
                                    <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; state was changed from &quot;Degraded&quot; state to  &quot;{ITEM.VALUE}&quot;</name>
                                    <priority>INFO</priority>
                                    <tags>
                                        <tag>
                                            <tag>SOURCE</tag>
                                            <value>Intel RST LD state</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{regexp({$LD_WARNING_SEVERITY_STATES},#1)}=1 and {regexp(Failed,#2)}=1</expression>
                                    <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; state was changed from &quot;Failed&quot; state to  &quot;{ITEM.VALUE}&quot;</name>
                                    <priority>INFO</priority>
                                    <tags>
                                        <tag>
                                            <tag>SOURCE</tag>
                                            <value>Intel RST LD state</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_Intel_RST_with js:irst.raid.state.[{#LDNAME}].regexp({$LD_HIGH_SEVERITY_STATES})}=1&#13;
and {Template_Intel_RST_with js:irst.raid.level.[{#LDNAME}].last()}&gt;0 and&#13;
{Template_Intel_RST_with js:irst.raid.pdcount.[{#LDNAME}].last()}&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template_Intel_RST_with js:irst.raid.state.[{#LDNAME}].regexp({$LD_RECOVERY_STATES})}=1</recovery_expression>
                            <name>Intel RST: Logical disk &quot;{#LDNAME}&quot; is &quot;{ITEM.VALUE1}&quot;. LD level: {ITEM.VALUE2} Disks count: {ITEM.VALUE3}</name>
                            <priority>HIGH</priority>
                            <tags>
                                <tag>
                                    <tag>SOURCE</tag>
                                    <value>Intel RST LD state</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>irst.allinfo[{$IRST_CLI}]</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#LDNAME}</lld_macro>
                            <path>$.LDNAME</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>value=(value.match(/.*/gm)).toString()
var re=/Name:\s*\S*Raid Level:\s*\S*(?=(,,,))/gmi;
var matches = value.match(re);
var prejson = '';
function obj(){
    obj=new Object();
    this.add=function(key,value){
        obj[&quot;&quot;+key+&quot;&quot;]=value;
    }
    this.obj=obj
}
var myobj={};
myobj = new obj();
for(var i = 0; i &lt; matches.length; i++)
{
    var str = matches[i].split(',,,');
    for(var x = 0; x &lt; str.length; x++){
       var temp  = str[x].split(':');
myobj.add(temp[0],temp[1]);
    } 
prejson= prejson + &quot;,&quot; + (((JSON.stringify(myobj,null,space=0)).replace(/{&quot;obj&quot;:{&quot;Name&quot;:&quot;\s*/gm,'{&quot;LDNAME&quot;:&quot;')).replace(/}$/,&quot;&quot;));
}
json=(&quot;[&quot; + prejson + &quot;]&quot;).replace(/\[,/,&quot;[&quot;).replace(/\s{2,}/gm,&quot;&quot;)
return json.toString()</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>{$LD_THROTTLING_HB_PERIOD}</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>Physical disks discovery</name>
                    <type>DEPENDENT</type>
                    <key>pdlld</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>Physical disk &quot;{#SLOT}&quot; serial number</name>
                            <type>DEPENDENT</type>
                            <key>irst.pd.sn.[&quot;{#SLOT}&quot;]</key>
                            <delay>0</delay>
                            <history>{$PD_HISTORY_PERIOD}</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Intel RST Physical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#SLOT}']['Serial Number']</params>
                                </step>
                                <step>
                                    <type>NOT_MATCHES_REGEX</type>
                                    <params>.*(_nocorrectsn$)</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$PD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.pd</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;2</expression>
                                    <name>Intel RST: Physical disk &quot;{#SLOT}&quot; was replaced by  sn &quot;{ITEM.VALUE}&quot;</name>
                                    <priority>INFO</priority>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>SOURCE</tag>
                                            <value>Intel RST PD replace</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Physical disk &quot;{#SLOT}&quot; state</name>
                            <type>DEPENDENT</type>
                            <key>irst.pd.state.[&quot;{#SLOT}&quot;]</key>
                            <delay>0</delay>
                            <history>{$PD_HISTORY_PERIOD}</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Intel RST Physical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#SLOT}']['State']</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$PD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.pd</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Physical disk &quot;{#SLOT}&quot; usage</name>
                            <type>DEPENDENT</type>
                            <key>irst.pd.usage.[&quot;{#SLOT}&quot;]</key>
                            <delay>0</delay>
                            <history>{$PD_HISTORY_PERIOD}</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <applications>
                                <application>
                                    <name>Intel RST Physical Disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]['{#SLOT}']['Usage']</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>{$PD_THROTTLING_HB_PERIOD}</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>irst.pd</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_INFORMATION_SEVERITY_STATES})}=1 and {Template_Intel_RST_with js:irst.pd.sn.[&quot;{#SLOT}&quot;].strlen()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Intel RST: Physical disk &quot;{#SLOT}&quot; is &quot;{ITEM.VALUE1}&quot;. Disk SN is &quot;{ITEM.VALUE2}&quot;</name>
                            <priority>INFO</priority>
                            <tags>
                                <tag>
                                    <tag>SOURCE</tag>
                                    <value>Intel RST PD state</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_WARNING_SEVERITY_STATES})}=1 and {Template_Intel_RST_with js:irst.pd.sn.[&quot;{#SLOT}&quot;].strlen()}&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_RECOVERY_STATES})}=1</recovery_expression>
                            <name>Intel RST: Physical disk &quot;{#SLOT}&quot; is &quot;{ITEM.VALUE1}&quot;. Disk SN is &quot;{ITEM.VALUE2}&quot;</name>
                            <priority>WARNING</priority>
                            <dependencies>
                                <dependency>
                                    <name>Intel RST: Physical disk &quot;{#SLOT}&quot; is &quot;{ITEM.VALUE}&quot;. Disk SN is &quot;{ITEM.VALUE2}&quot;</name>
                                    <expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_HIGH_SEVERITY_STATES})}=1 and {Template_Intel_RST_with js:irst.pd.sn.[&quot;{#SLOT}&quot;].strlen()}&gt;0</expression>
                                    <recovery_expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_RECOVERY_STATES})}=1</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>SOURCE</tag>
                                    <value>Intel RST PD state</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_HIGH_SEVERITY_STATES})}=1 and {Template_Intel_RST_with js:irst.pd.sn.[&quot;{#SLOT}&quot;].strlen()}&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template_Intel_RST_with js:irst.pd.state.[&quot;{#SLOT}&quot;].iregexp({$PD_RECOVERY_STATES})}=1</recovery_expression>
                            <name>Intel RST: Physical disk &quot;{#SLOT}&quot; is &quot;{ITEM.VALUE}&quot;. Disk SN is &quot;{ITEM.VALUE2}&quot;</name>
                            <priority>HIGH</priority>
                            <tags>
                                <tag>
                                    <tag>SOURCE</tag>
                                    <value>Intel RST PD state</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <master_item>
                        <key>irst.SMART.lld</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#SLOT}</lld_macro>
                            <path>$.['SLOT']</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>APP</tag>
                    <value>Intel RST disk controller</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$INTERNAL_ITEMS_HISTORY_PERIOD}</macro>
                    <value>0</value>
                    <description>Time interval for saving data. For debagging use you can set not null</description>
                </macro>
                <macro>
                    <macro>{$INTERNAL_ITEMS_REQUEST_PERIOD}</macro>
                    <value>60m</value>
                    <description>Time interval for getting internal information for template. Like driver version for controllers</description>
                </macro>
                <macro>
                    <macro>{$LD_HIGH_SEVERITY_STATES}</macro>
                    <value>Degraded|Failed</value>
                    <description>Logical disks high severity states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$LD_INFORMATION_SEVERITY_STATES}</macro>
                    <value>Initializing</value>
                    <description>Logical disks information severity states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$LD_RECOVERY_STATES}</macro>
                    <value>Normal</value>
                    <description>Logical disks recovery states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$LD_WARNING_SEVERITY_STATES}</macro>
                    <value>Rebuilding|Verify and Fix</value>
                    <description>Logical disks warning severity states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$PD_HIGH_SEVERITY_STATES}</macro>
                    <value>Missing|Failed</value>
                    <description>Physical disks high severity states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$PD_INFORMATION_SEVERITY_STATES}</macro>
                    <value>need to set it</value>
                    <description>Physical disks high severity states</description>
                </macro>
                <macro>
                    <macro>{$PD_RECOVERY_STATES}</macro>
                    <value>Normal</value>
                    <description>Physicall disks recovery states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$PD_WARNING_SEVERITY_STATES}</macro>
                    <value>Verify|Rebuilding</value>
                    <description>Physicall disks warning severity states (using in regex of triggers)</description>
                </macro>
                <macro>
                    <macro>{$STOR_CTRL_REQUEST_PERIOD}</macro>
                    <value>5m</value>
                    <description>Time interval for getting all information from storage contrroller</description>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
